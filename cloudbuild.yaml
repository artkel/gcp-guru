steps:
# 1. Build and push the backend image
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Backend'
  args:
    - 'build'
    - '--no-cache'
    - '-t'
    - 'europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-backend:$SHORT_SHA'
    - '-f'
    - 'backend/Dockerfile'
    - '.'
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Backend'
  args: ['push', 'europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-backend:$SHORT_SHA']

# 2. Deploy backend and write its URL to a workspace file
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Backend and Capture URL'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud run deploy gcp-guru-backend \
      --image=europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-backend:$SHORT_SHA \
      --region=europe-west3 \
      --platform=managed \
      --no-allow-unauthenticated \
      --set-env-vars=GCS_BUCKET_NAME=gcp-guru-data-bucket-$PROJECT_ID \
      --format='value(status.url)' > /workspace/backend_url.txt

# 3. Build and push the frontend image, reading the URL from the workspace file
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build Frontend'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker build \
      --no-cache \
      --build-arg NEXT_PUBLIC_API_URL=$(cat /workspace/backend_url.txt) \
      -t europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-frontend:$SHORT_SHA \
      -f frontend/Dockerfile \
      .
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push Frontend'
  args: ['push', 'europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-frontend:$SHORT_SHA']

# 4. Deploy the frontend, reading the URL from the workspace file
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: 'Deploy Frontend'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud run deploy gcp-guru-frontend \
      --image=europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-frontend:$SHORT_SHA \
      --region=europe-west3 \
      --platform=managed \
      --allow-unauthenticated \
      --set-env-vars=NEXT_PUBLIC_API_URL=$(cat /workspace/backend_url.txt)

images:
- 'europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-backend:$SHORT_SHA'
- 'europe-west3-docker.pkg.dev/$PROJECT_ID/gcp-guru-repo/gcp-guru-frontend:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY